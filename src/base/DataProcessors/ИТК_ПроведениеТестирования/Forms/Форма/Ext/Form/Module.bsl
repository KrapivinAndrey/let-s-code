#Область ОписаниеПеременных

&НаКлиенте
Перем УИ_РедакторКодаКлиентскиеДанные Экспорт;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПостановкаЗадачи = "<html><head></head><body><h3>Выбери задачу из списка...</h1></body>";
	
	Пользователь = ПолноеИмяПользователя();
	СписокЗадач.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователь);
	
	УИ_РедакторКодаСервер.ФормаПриСозданииНаСервере(ЭтотОбъект);
	УИ_РедакторКодаСервер.СоздатьЭлементыРедактораКода(ЭтотОбъект, "Сервер", Элементы.ПолеАлгоритмаСервер);
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                                                           
	
	УИ_РедакторКодаКлиент.ФормаПриОткрытии(ЭтотОбъект, Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект));                                             
	
КонецПроцедуры  

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	// ... no one lives forever
КонецПроцедуры

#КонецОбласти  

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоЗадаче(Данные)
	
	Если Данные <> Неопределено И ЗначениеЗаполнено(Данные.Задача) Тогда 
		
		БатлНачат = Истина;
		
		ЗаполнитьПоЗадачеНаСервере(Данные.Задача);
		УстановитьТекстРедактора("Сервер", ТекстАлгоритмаСервер, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗадачеНаСервере(Задача)
	
	ДанныеЗадачи = УИ_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Задача, "ПостановкаЗадачи, ШаблонКода, Баллы, Тесты");
	
	ПостановкаЗадачи = "<html><head></head><body>" + ДанныеЗадачи.ПостановкаЗадачи + "</body></html>";
	Баллы = ДанныеЗадачи.Баллы;
	ТекущаяЗадача = Задача;
	
	_СписокТестов = ДанныеЗадачи.Тесты.Выгрузить();
	СписокТестов.Очистить();
	
	Для Каждого СтрокаТест Из _СписокТестов Цикл
		НоваяСтрока = СписокТестов.Добавить();
		НоваяСтрока.Тест = СокрЛП(СтрокаТест.Тест);
		НоваяСтрока.Предустановка = СокрЛП(СтрокаТест.Предустановка);
		НоваяСтрока.Представление = СокрЛП(СтрокаТест.Представление);
	КонецЦикла;
	
	ТекстАлгоритмаСервер = ДанныеЗадачи.ШаблонКода;
	ПротоколТестирования = "";
	ВыполненУспешно = Ложь;
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРешение(Команда)
	
	ТекстАлгоритмаСервер = УИ_РедакторКодаКлиент.ТекстКодаРедактора(ЭтотОбъект, "Сервер");
	
	СформироватьПротоколНаСервере();
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПротоколТестирование;

КонецПроцедуры

&НаСервере
Процедура СформироватьПротоколНаСервере()
	
	РезультатыТестирования = Справочники.ИТК_Задачи.ПолучитьРезультатыТестирования(ТекстАлгоритмаСервер, СписокТестов);
	ПротоколТестирования = РезультатыТестирования.ПротоколТестирования;
	ВыполненУспешно = РезультатыТестирования.ВыполненУспешно;
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезагрузитьКод(Команда)
	
	СписокЗадачВыбор(Команда, Неопределено, Неопределено, Ложь);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПостановкаЗадачи;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьРешение(Команда)

	ОпубликоватьРешениеНаСервере(); 
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПостановкаЗадачи;
	УстановитьТекстРедактора("Сервер", "", Истина);

КонецПроцедуры  

&НаСервере
Процедура ОпубликоватьРешениеНаСервере()
	
	НоваяЗапись = РегистрыСведений.ИТК_РезультатыТестирования.СоздатьМенеджерЗаписи();   
	НоваяЗапись.Задача = ТекущаяЗадача;
	НоваяЗапись.Пользователь = Пользователь;
	НоваяЗапись.Выполнена = Истина;
	НоваяЗапись.Код = ТекстАлгоритмаСервер;
	НоваяЗапись.КоличествоБаллов = Баллы;
	НоваяЗапись.Записать(Истина);
	
	ТекущаяЗадача = Справочники.ИТК_Задачи.ПустаяСсылка();
	ПостановкаЗадачи = "<html><head></head><body><h3>Выбери задачу из списка...</h1></body>";
	ПротоколТестирования = "";     
	
	ВыполненУспешно = Ложь;
	Баллы = 0;
		
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеРедактораДокументСформирован(Элемент)
	УИ_РедакторКодаКлиент.ПолеРедактораHTMLДокументСформирован(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеРедактораПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	УИ_РедакторКодаКлиент.ПолеРедактораHTMLПриНажатии(ЭтотОбъект, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РедакторКодаОтложеннаяИнициализацияРедакторов()
	УИ_РедакторКодаКлиент.РедакторКодаОтложеннаяИнициализацияРедакторов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте 
Процедура Подключаемый_РедакторКодаЗавершениеИнициализации() Экспорт
	УстановитьТекстРедактора("Сервер", ТекстАлгоритмаСервер, Истина);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РедакторКодаОтложеннаяОбработкаСобытийРедактора() Экспорт
	УИ_РедакторКодаКлиент.ОтложеннаяОбработкаСобытийРедактора(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЗадач

&НаКлиенте
Процедура СписокЗадачПриАктивизацииСтроки(Элемент)
	
	// TODO: обновление при активизации
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокЗадач.ТекущиеДанные;
	ЗаполнитьПоЗадаче(ТекущиеДанные);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПостановкаЗадачи;
	
КонецПроцедуры   

#КонецОбласти    

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьТекстРедактора(ИдентификаторРедактора, ТекстАлгоритма, УстановитьОригинальныйТекст = Ложь)

	УИ_РедакторКодаКлиент.УстановитьТекстРедактора(ЭтотОбъект, ИдентификаторРедактора, ТекстАлгоритма, УстановитьОригинальныйТекст);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДополнительныйКонтекстВРедакторКода(ИдентификаторРедактора)

КонецПроцедуры
 
&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	Элементы.ПроверитьРешение.Видимость = НЕ ВыполненУспешно;
	Элементы.ОпубликоватьРешение.Видимость = ВыполненУспешно;
	
	Элементы.ПолеАлгоритмаСервер.Доступность = НЕ ВыполненУспешно;
	
	ОбновитьПараметрыПоУчастнику();
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыПоУчастнику()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(РезультатыТестирования.КоличествоБаллов) КАК КоличествоБаллов,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РезультатыТестирования.Задача) КАК КоличествоРешенныхЗадач
		|ИЗ
		|	РегистрСведений.ИТК_РезультатыТестирования КАК РезультатыТестирования
		|ГДЕ
		|	РезультатыТестирования.Пользователь = &Пользователь";
	
	Выборка = Запрос.Выполнить().Выбрать(); Выборка.Следующий();
	КоличествоРешенныхЗадач = Выборка.КоличествоРешенныхЗадач;
	КоличествоБаллов = Выборка.КоличествоБаллов;	
	
КонецПроцедуры

#КонецОбласти


