#Область ОписаниеПеременных

#КонецОбласти


#Область ОбработчикиСобытийФормы   

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройки по умолчанию
	
	РежимИгры = "Дуэль";
	УстановитьНастройкиДуэль();
	
КонецПроцедуры

#КонецОбласти


#Область ВспомогательныеПроцедуры

&НаСервере
Процедура ЗаполнитьСписокЗадач()
	
	Задания.Очистить();
	ПодсказкиВедущему.Очистить();
	ВремяНаЗадачуСек = ВремяНаЗадачу - '00010101000000';                                                             
	
	Если РежимИгры = "Дуэль" Тогда
		
		ДопЗадач = 1;
		
	Иначе
		
		ДопЗадач = 3;
		
	КонецЕсли;
	
	ЗадачиИгрокам = ДевБаттл_РаботаВедущего.НоваяИгра_СписокЗадач(КоличествоПростых, КоличествоСредних, КоличествоСложных, ДопЗадач);
	
	Сч = 1;
	
	Для Каждого Задание Из ЗадачиИгрокам Цикл
		
		СтрокаТЧ = Задания.Добавить();
		СтрокаТЧ.Задача = Задание;
		СтрокаТЧ.ВремяНаЗадачу = ВремяНаЗадачуСек; 
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьИгру()
	
	ПодсказкиВедущему.Очистить();
	ПараметрыИгры = Новый Структура;
	ПараметрыИгры.Вставить("Задания", Задания.Выгрузить());
	ПараметрыИгры.Вставить("ОжиданиеПервый", ОжиданиеПервыйИгрок);
	ПараметрыИгры.Вставить("ОжиданиеВторой", ОжиданиеВторойИгрок);
	ПараметрыИгры.Вставить("Ожидание", ОжиданиеПервыйИгрок);
	ПараметрыИгры.Вставить("КоличествоИгроков", КоличествоИгроков);
		
	ЭтоДуэль = (РежимИгры = "Дуэль");
	
	
	ДевБаттл_РаботаВедущего.ЗаписатьЗадачиИгрокам(ЭтоДуэль, ПараметрыИгры);
	
	Подсказки = ДевБаттл_РаботаВедущего.ПодсказкиВедущему(ЭтоДуэль, ПараметрыИгры);
	ПодсказкиВедущему.ЗагрузитьЗначения(Подсказки);
	
	ДевБаттл_РаботаВедущего.УстановитьПравилаИгры(ЭтоДуэль, ПараметрыИгры);
	
КонецПроцедуры

&НаСервере
Процедура НоваяИграНаСервере()
	
	ДевБаттл_РаботаВедущего.ОчиститьВсе();
	
	ДевБаттл_РаботаВедущего.УстановитьРаунд(0);
	ДевБаттл_РаботаВедущего.УказатьСостояниеИгроков("НачалоИгры");
	ИнициализироватьИгру();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНомерРаундаНаСервере(НомерРаунда)
	
	Константы.ДевБаттл_Раунд.Установить(НомерРаунда);
	
	ДевБаттл_РаботаВедущего.УказатьСостояниеИгроков("НачалоРаунда", КоличествоИгроков);
	СформироватьРезультатыИгроков();
	
КонецПроцедуры

&НаСервере
Процедура НовыйРаундНаСервере()
	
	ТекущийРаунд = Константы.ДевБаттл_Раунд.Получить();
	ТекущийРаунд = ТекущийРаунд + 1;
	УстановитьНомерРаундаНаСервере(ТекущийРаунд);
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьИгрока(Игрок)

	ТекущийИгрок = Игрок;   
	ДевБаттл_РаботаВедущего.УказатьСостояниеИгрока(Игрок, ТекущийВидИспытания);
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьВсехИгроков()
	
	ТекущийВидИспытания = ПредопределенноеЗначение("Перечисление.ДевБаттл_СостояниеИгрока.ИспытаниеОдновременное");
	Для Сч = 1 По КоличествоИгроков Цикл
		
		ЗапуститьИгрока("Игрок" + Сч);
		
	КонецЦикла;
	ТекущийИгрок = "Играют все!";
	
КонецПроцедуры

&НаСервере
Процедура СформироватьРезультатыИгроков()
	
	РезультатыИгроков.Очистить();
	ТабДок = Отчеты.ДевБаттл_РезультатыИгры.РезультатыИспытаний();
	РезультатыИгроков.Вывести(ТабДок);
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПодсказкуВедущему()
	
	ЦветОбычный = Новый Цвет(246, 246, 246);
	ЦветАкцент  = Новый Цвет(61, 61, 61);
	
	Элементы.НовыйРаунд.ЦветФона		= ЦветОбычный;
	Элементы.Игрок1.ЦветФона			= ЦветОбычный;
	Элементы.Игрок2.ЦветФона			= ЦветОбычный;
	Элементы.ФинальныйРаунд.ЦветФона	= ЦветОбычный;
	Элементы.НачатьИспытание.ЦветФона	= ЦветОбычный;
	Элементы.ФинальноеИспытание.ЦветФона	= ЦветОбычный;
	
	Элементы.НовыйРаунд.ЦветТекста		= WebЦвета.Черный;
	Элементы.Игрок1.ЦветТекста			= WebЦвета.Черный;
	Элементы.Игрок2.ЦветТекста			= WebЦвета.Черный;
	Элементы.ФинальныйРаунд.ЦветТекста	= WebЦвета.Черный;
	Элементы.НачатьИспытание.ЦветТекста	= WebЦвета.Черный;
	Элементы.ФинальноеИспытание.ЦветТекста	= WebЦвета.Черный;

	Если ТекущееСостояние < ПодсказкиВедущему.Количество() Тогда
	
		Элементы[ПодсказкиВедущему[ТекущееСостояние].Значение].ЦветФона		= ЦветАкцент;
		Элементы[ПодсказкиВедущему[ТекущееСостояние].Значение].ЦветТекста	= WebЦвета.Белый;
		
		ТекущееСостояние = ТекущееСостояние + 1;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗавершитьРаундИгрока(Игрок, Выполнено, ПотраченоВремени)
	
	ДевБаттл_ОбщегоНазначенияВызовСервера.ЗафиксироватьРезультатИспытания(Игрок, Выполнено, ПотраченоВремени);	
	Если Выполнено Тогда
		
		ДевБаттл_РаботаВедущего.УказатьСостояниеИгрока(Игрок, Перечисления.ДевБаттл_СостояниеИгрока.РезультатИспытанияВыполнено);
		
	Иначе
		
		ДевБаттл_РаботаВедущего.УказатьСостояниеИгрока(Игрок, Перечисления.ДевБаттл_СостояниеИгрока.РезультатИспытанияПровалено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводНомерРаундаЗавершение(Число, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Число = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТекущийРаунд = Число;
	УстановитьНомерРаундаНаСервере(Число);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КонецИгрыНаСервере()
	
	ДевБаттл_РаботаВедущего.ЗакончитьИгру();
		
КонецПроцедуры 

&НаКлиенте
Функция ВведеныКорректныеНастройки()
	
	Если РежимИгры = "Дуэль" Тогда
		
		Результат = ВалидироватьНастройкиДуэли();
		
	Иначе
		
		Результат = ВалидироаптьНастройкиМультиплеера();
		
	КонецЕсли;
	
	Возврат Результат;	
		
КонецФункции
	
&НаКлиенте
Функция ВалидироватьНастройкиДуэли()
	
	НастройкиКорректны = Истина;
	
	Если КоличествоПростых % 2 <> 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Количество задач должно быть кратно 2";
		Сообщение.Поле = "КоличествоПростых";
		
		Сообщение.Сообщить();
		
		НастройкиКорректны = Ложь;
		
	КонецЕсли;
	
	Если КоличествоСредних % 2 <> 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Количество задач должно быть кратно 2";
		Сообщение.Поле = "КоличествоСредних";
		
		Сообщение.Сообщить();
		
		НастройкиКорректны = Ложь;
		
	КонецЕсли;
	
	Если КоличествоСложных % 2 <> 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Количество задач должно быть кратно 2";
		Сообщение.Поле = "КоличествоСложных";
		
		Сообщение.Сообщить();
		
		НастройкиКорректны = Ложь;
		
	КонецЕсли;
	
	Возврат НастройкиКорректны;
	
КонецФункции

&НаКлиенте
Функция ВалидироаптьНастройкиМультиплеера()
	
	НастройкиКорректны = Истина;
	
	Если КоличествоИгроков <= 1 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для игры необходимо хотя бы 2 игрока";
		Сообщение.Поле = "КоличествоИгроков";
		
		Сообщение.Сообщить();
		
		НастройкиКорректны = Ложь;
		
	КонецЕсли;
	
	Если КоличествоПростых + КоличествоСредних + КоличествоСложных = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите количество игр";
		Сообщение.Поле = "КоличествоПростых";
		
		Сообщение.Сообщить();                
		
		НастройкиКорректны = Ложь;           
		
	КонецЕсли;
	
	Возврат НастройкиКорректны;
	
КонецФункции

&НаКлиенте
Процедура УстановитьНастройкиДуэль()
	
	КоличествоПростых = 2;
	КоличествоСредних = 2;
	КоличествоСложных = 2;
	
	ВремяНаЗадачу = '00010101000500';
	ОжиданиеПервыйИгрок = 30;
	ОжиданиеВторойИгрок = 10;
	
	КоличествоИгроков = 2;
	
	// Оформление
	ОформитьФормуПодИгру(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНастройкиМультиплеер()
	
	КоличествоПростых = 2;
	КоличествоСредних = 2;
	КоличествоСложных = 2;
	
	ВремяНаЗадачу = '00010101001500';
	ОжиданиеПервыйИгрок = 5;
	ОжиданиеВторойИгрок = 0;
	
	КоличествоИгроков = 3;
	// Оформление
	ОформитьФормуПодИгру(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьФормуПодИгру(ЭтоДуэль)
	
	Элементы.КоличествоИгроков.Видимость	= Не ЭтоДуэль;
	Элементы.ОжиданиеПервыйИгрок.Видимость	= ЭтоДуэль;
	Элементы.ОжиданиеВторойИгрок.Видимость	= ЭтоДуэль;
	Элементы.Игрок1.Видимость				= ЭтоДуэль;
	Элементы.Игрок2.Видимость				= ЭтоДуэль; 
	Элементы.НачатьИспытание.Видимость 		= Не ЭтоДуэль;
	Элементы.ФинальноеИспытание.Видимость 	= Не ЭтоДуэль;
	Элементы.ФинальныйРаунд.Видимость		= ЭтоДуэль;
	
	Элементы.ГруппаРасширенноеИгрок1.Видимость		= ЭтоДуэль;
	Элементы.ГруппаРасширенноеИгрок2.Видимость		= ЭтоДуэль;
	Элементы.ГруппаРасширеннойВсеИгроки.Видимость	= НЕ ЭтоДуэль;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РежимИгрыПриИзменении(Элемент)
	
	Если РежимИгры = "Дуэль" Тогда
		
		УстановитьНастройкиДуэль();
		
	Иначе
		
		УстановитьНастройкиМультиплеер();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяИгра(Команда)	
	
	Если Не ВведеныКорректныеНастройки() Тогда
		
		Возврат
		
	КонецЕсли;
	
	Если Задания.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните задания игрокам";
		Сообщение.Поле = "ЗаданияЗаполнитьЗадачи";
		
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	НоваяИграНаСервере();
	
	ТекущийИгрок = "";
	ТекущийРаунд = "";
	ТекущееСостояние = 0;
	УстановитьПодсказкуВедущему();
		
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьИгру(Команда) 
	
	ПодсказкиВедущему.Очистить();
	ТекущийИгрок = "";
	ТекущийРаунд = "";           
	
	КонецИгрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйРаунд(Команда)
	
	НовыйРаундНаСервере();
	УстановитьПодсказкуВедущему();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьИгрок1(Команда)

	ТекущийВидИспытания = ПредопределенноеЗначение("Перечисление.ДевБаттл_СостояниеИгрока.ИспытаниеОдиночное");
	ЗапуститьИгрока("Игрок1"); 
	УстановитьПодсказкуВедущему();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьИгрок2(Команда)
	
	ТекущийВидИспытания = ПредопределенноеЗначение("Перечисление.ДевБаттл_СостояниеИгрока.ИспытаниеОдиночное");
	ЗапуститьИгрока("Игрок2"); 
	УстановитьПодсказкуВедущему();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаундПройденоИгрок1(Команда)
	ЗавершитьРаундИгрока("Игрок1", Истина, 3 * 60);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаундПройденоИгрок2(Команда)
	ЗавершитьРаундИгрока("Игрок2", Истина, 3 * 60);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаундПройденоИгрок3(Команда)
	ЗавершитьРаундИгрока("Игрок3", Истина, 3 * 60);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаундПройденоИгрок4(Команда)
	ЗавершитьРаундИгрока("Игрок4", Истина, 3 * 60);
КонецПроцедуры                  

&НаКлиенте
Процедура ЗавершитьРаундПройденоИгрок5(Команда)
	ЗавершитьРаундИгрока("Игрок5", Истина, 3 * 60);
КонецПроцедуры                  

&НаКлиенте
Процедура ЗавершитьРаундПройденоИгрок6(Команда)
	ЗавершитьРаундИгрока("Игрок6", Истина, 3 * 60);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаундПроваленоИгрок1(Команда)
	ЗавершитьРаундИгрока("Игрок1", Ложь, 0);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаундПроваленоИгрок2(Команда)
	ЗавершитьРаундИгрока("Игрок2", Ложь, 0);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРаунд(Команда)
	
	ПоказатьВводЧисла(Новый ОписаниеОповещения("ВводНомерРаундаЗавершение", ЭтаФорма)
						, ТекущийРаунд
						, "Какой номер раунда хотите объявить"
						, 2, 0);
						
КонецПроцедуры

&НаКлиенте
Процедура ФинальныйРаунд(Команда)
	
	ТекущийВидИспытания = ПредопределенноеЗначение("Перечисление.ДевБаттл_СостояниеИгрока.ИспытаниеОдновременное");
	ЗапуститьИгрока("Игрок1");
	ЗапуститьИгрока("Игрок2"); 
	УстановитьПодсказкуВедущему();
	
	ТекущийИгрок = "Финальный раунд, играют оба игрока";
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьИспытание(Команда)
	
	ЗапуститьВсехИгроков();
	УстановитьПодсказкуВедущему();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаполнитьЗадачи(Команда)
	
	Если Не ВведеныКорректныеНастройки() Тогда
		
		Возврат
		
	КонецЕсли;
	
	ЗаполнитьСписокЗадач();
КонецПроцедуры



#КонецОбласти




 




